
1) Read ambout amazon lambdas
2) Read about amazon api-gateway

Real source(Tuto que seguì):
https://learn.hashicorp.com/terraform/aws/lambda-api-gateway

Other reading:
https://medium.com/galvanize/aws-lambda-deployment-with-terraform-24d36cc86533


> La dinàmica es implementar la plicaciòn en una o màs lambdas y exponer estas mediante un API Gateway de amazon
> La lambda la puedo construir(escribir) en diferentes lenguajes de programaciòn  directamente en amazon o subir mis 
Micro-Servicios allì.

> Para proyectos que deben compilarse com java se debe tener en cuenta que terraform no es una herramienta para hacer build 
por ello recomienda usar CI System (continous integration System) para dicho build y que produzca el zip necesario.
Para luego subirlo a amazon S3 bucket (Simple Storage Service) (investigar como ..puede ser con Jhonny ocampo :))
Para el proyecto como lo vamos a compilar?:

Preguntar a David si por temas de compilaciòn es mejor usar Js o python para crear la lambda?

>  

:::::::::::::::::::::::comandos ejecutados::::::::::::::::
1) zip ../lambda_ex1 MainJs.js (crea el zip que se subirà al s3)
# de ser necesario 1.1) "aws configure" para cambiar las credenciales
2) aws s3api create-bucket --bucket=terraform-serverless-example --region=us-east-1  (crea un bucket llamado terraform-serverless-example)
Error: The bucket namespace is shared by all users of the system
Solución: colocar un nombre unico ya que eso se comparte global algo asi como jag-terraform-serverless-example1 

3) aws s3 cp lambda_ex1.zip s3://jag-terraform-serverless-example1/v1.0.0/lambda_ex1.zip (suble el zip que creamos en el punto 1)
	Note el versionamiento que crearà una carpeta  por versiòn
	
4) Create the lambda function with terrafor (see lambda.tf file in ..\AWS_my_github\apigw_lambda_project1\terraform)
5) terraform init
6) terraform apply
7) $ aws lambda invoke --region=us-east-1 --function-name=ServerlessExample output.txt (invocar la function creada con aws lambdas)
---hasta acà quedò la lambda creada :) :) :) :) :) :) :) :) :) :)
--AHORA COMO EXPONEMOS ESA LAMBDA A UN FRONT POR EJEMPLO 
R/ Con Amazon API Gateway!!! :) 

See api_gateway.tf in ..\AWS_my_github\apigw_lambda_project1\terraform\api_gateway.tf


:::::::::::::Allowing API Gateway to Access Lambda:::::::::::::::::::::::::
Se trata de que el lambda que creemos de permisos de invocacion a esta al api gateway 

Error:
Error: Error creating IAM Role serverless_example_lambda: AccessDenied: User: arn:aws:iam::104451704395:user/Administrator is not authorized to perform: iam:CreateRole on resource: arn:aws:iam::104451704395:role/serverless_example_lambda with an explicit deny
        status code: 403, request id: d9fd8507-d4cf-11e9-8389-c36c0929cbf3
		
Solución: revisar la politicas del usuario y ver si alguna politica le está negando el acceso a hacer x o y operación
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

»A New Version of the Lambda Function:::::::
Cuando hacemos cambios en el código y necesitamos actualizar la lambda entonces:
1) Realice los cambios necesario
2) Actualice(regenerandolo de nuevo) el zip que se sube a amazon bucket, comando:
	>zip ../lambda_ex1.zip main.js
3) Suba el Zip como una nueva version (note la nueva carpeta v.1.0.1)
	aws s3 cp lambda_ex1.zip s3://jag-terraform-serverless-example1/v1.0.1/lambda_ex1.zip
4) Y que pasa con la version anterior?, como movernos entre versiones?
R/ La version anterior queda hasta que la eliminemos, además si desea moverse entre versiones 
debe crear una variable dentro del archivo terraform y desde consola intercambia tal como se muestra a continuación:
	terraform apply -var="app_version=1.0.1" ó
	terraform apply -var="app_version=1.0.0"

»Destroy or Cleaning Up::::::::::::::::::::::::::::::::::::::::::
$ terraform destroy -var="app_version=0.0.0"

»Making Changes to the API Gateway:::::::

Si requiere cambiar la configuración de api gateway entonces debe ser consciente que requiere actualizar el api
mejor dicho un re-deploy, con éste comando hace ése redeploy
terraform taint aws_api_gateway_deployment.example
el comando indica que el objeto debe CREARSE de nuevo PERO los cambios no se dan hasta el próximo terraform apply command
Es decir que primero se ejecuta el tain y luego terraform apply :) 
::::::::::::::::::::::::::::::::::::::::::


